asyncapi: '2.2.0'
info:
  title: Robot
  version: '0.0.1'
  description: |
                !!!!Currently in discussion. Don't use this for implementation!!!!\
                This service is in charge of the robots for The Microservice Dungeon\
                You can use the "robot" topic to subcribe to our events.\
                !!!!Currently in discussion. Don't use this for implementation!!!!

channels:
  robot-spawned:
    publish:
      message:
        $ref: '#/components/messages/robot-spawned'
  robot-upgraded:
    publish:
      message:
        $ref: '#/components/messages/robot-upgraded'        
  movement:
    publish:
      message:
        $ref: '#/components/messages/movement'
  neighbours:
    publish:
      message:
        $ref: '#/components/messages/neighbours'       
  planet-blocked:
    publish:
      message:
        $ref: '#/components/messages/planet-blocked' 
  mining:
    publish:
      message:
        $ref: '#/components/messages/mining'
  fighting:
    publish:
      message:
        $ref: '#/components/messages/fighting'
  regeneration:
    publish:
      message:
        $ref: '#/components/messages/regeneration'        
  restoration: #instant restoration
    publish:
      message:
        $ref: '#/components/messages/restoration'
  item-fighting: #Eigener Kanal, oder in fighting???
    publish:
      message:
        $ref: '#/components/messages/item-fighting'
  item-repair: #Eigener Kanal???
    publish:
      message:
        $ref: '#/components/messages/item-repair'
  item-movement : #Eigener Kanal, oder in movement???
    publish:
      message:
        $ref: '#/components/messages/item-movement'
components:
  messageTraits:
    DefaultTradingKafkaMessage:
      bindings:
        kafka:
          key:
            type: string
            format: uuid
          bindingVersion: '0.1.0'
      correlationId:
        location: "$message.header#/transactionId"
      headers:
        type: object
        required:
          - eventId
          - transactionId
          - version
          - timestamp
          - type
        properties:
          eventId:
            type: string
            format: uuid
            description: Generated UUID of the event
            example: 5bc9f935-32f1-4d7b-a90c-ff0e6e34125a
          transactionId:
            type: string
            format: uuid
            description: TransactionID if available or UUID of the entity concerned
            example: 0cfc04f1-6df5-42c6-a19a-146128b8a3b4
          version:
            type: integer
            description: Consecutive number for the comparability of the actuality of the event
            example: 42
          timestamp:
            type: string
            format: date-time
            description: >
              timestamp as specified in [time-format-decision](https://the-microservice-dungeon.github.io/decisionlog/decisions/time-format.html)
            example: 2020-01-10T12:00:00Z
          type:
            type: string
            description: The type of event
            example: event-example-uploaded
  messages:
    robot-spawned:
      description: >
        When new robots are spawned.
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: array
        description: Array of all robots spawned by this transaction
        items:
          - type: object
            properties:
              id:
                type: string
                description: Id of the robot
                format: uuid
              planet:
                type: string
                description: Planet id of the current position of the robot
                format: uuid
              alive:
                type: boolean
                example: true
              maxHealth:
                type: integer
                example: 10
              maxEnergy:
                type: integer
                example: 20
              energyRegen:
                type: integer
                example: 4
              attackDamage:
                type: integer
                example: 1
              miningSpeed:
                type: integer
                example: 2
              health:
                type: integer
                example: 10
              energy:
                type: integer
                example: 20
              healthLevel:
                type: integer
                example: 0
              damageLevel:
                type: integer
                example: 0
              miningSpeedLevel:
                type: integer
                example: 0
              miningLevel:
                type: integer
                example: 0
              energyLevel:
                type: integer
                example: 0
              energyRegenLevel:
                type: integer
                example: 0
              storageLevel:
                type: integer
                example: 0
              inventory:
                type: object
                properties:
                  maxStorage:
                    type: integer
                    example: 20
                  usedStorage:
                    type: integer
                    example: 0
                  coal:
                    type: integer
                    example: 0
                  iron:
                    type: integer
                    example: 0
                  gem:
                    type: integer
                    example: 0
                  gold:
                    type: integer
                    example: 0
                  platin:
                    type: integer
                    example: 0
              items:
                type: object
                properties:
                  rocket:
                    type: integer
                    example: 0
                  wormhole:
                    type: integer
                    example: 0
                  longRangeBombardement:
                    type: integer
                    example: 0
                  selfDestruction:
                    type: integer
                    example: 0
                  repairSwarm:
                    type: integer
                    example: 0
                  nuke:
                    type: integer
                    example: 0              
    robot-upgraded:
      description: >
        Updated robot data, when a robot is upgraded
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        description: Data of upgraded robot
        properties:
          id:
            type: string
            description: Id of the robot
            format: uuid
          planet:
            type: string
            description: Planet id of the current position of the robot
            format: uuid
          alive:
            type: boolean
            example: true
          maxHealth:
            type: integer
            example: 10
          maxEnergy:
            type: integer
            example: 20
          energyRegen:
            type: integer
            example: 4
          attackDamage:
            type: integer
            example: 1
          miningSpeed:
            type: integer
            example: 2
          health:
            type: integer
            example: 10
          energy:
            type: integer
            example: 20
          healthLevel:
            type: integer
            example: 0
          damageLevel:
            type: integer
            example: 0
          miningSpeedLevel:
            type: integer
            example: 0
          miningLevel:
            type: integer
            example: 0
          energyLevel:
            type: integer
            example: 0
          energyRegenLevel:
            type: integer
            example: 0
          storageLevel:
            type: integer
            example: 0
          inventory:
            type: object
            properties:
              maxStorage:
                type: integer
                example: 20
              usedStorage:
                type: integer
                example: 0
              coal:
                type: integer
                example: 0
              iron:
                type: integer
                example: 0
              gem:
                type: integer
                example: 0
              gold:
                type: integer
                example: 0
              platin:
                type: integer
                example: 0
          items:
            type: object
            properties:
              rocket:
                type: integer
                example: 0
              wormhole:
                type: integer
                example: 0
              longRangeBombardement:
                type: integer
                example: 0
              selfDestruction:
                type: integer
                example: 0
              repairSwarm:
                type: integer
                example: 0
              nuke:
                type: integer
                example: 0   
    movement:
      description: >
        Announces wheather a movemnt has been successfull and provides data about planet
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        properties:
          success:
            type: boolean
            description: true if movement associated with transactionId has been successfull. Maybe transactionId needs to be redacted?
          energyChangedBy:
            type: integer
            example: -10
            description: energy cost for movemnt
          planet:
            type: object
            properties:
              planetId:
                type: string
                format: uuid
              movementDifficulty:
                type: integer
                description: Movemenet difficulty of the planet
              rechargeMultiplicator:
                type: integer
                description: Recharge multiplicator of the planet
              planetType:
                type: string
                enum: [default, spawn, spacestation]
                description: Planet type (`default`, `spawn` or `spacestation`) of the planet
              resourceType:
                type: string
                enum: [coal, iron, gem, gold, platin]
          robots:
            type: array
            items:
              type: string
              format: uuid
    neighbours:
      description: >
        Neighbours of a planet after a robot has moved to it.
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: array
        items:
          - type: object
            properties:
              planetID:
                type: string
                format: uuid
                decription: uuid of the planets neighbours
              movementDifficulty:
                type: integer
                description: Movemenet difficulty of the planet
    planet-blocked:
      description: >
        If a planet has been blocked
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        properties:
          success:
            type: boolean
          planetId:
            type: string
            format: uuid
          energyChangedBy:
            type: integer
            example: -10
            description: energy cost for blocking
    mining:
      description: >
        Result of a mining operation
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        properties:
          success:
            type: boolean
            description: Is true if the transaction succeeded
          inventoryChangedBy:
            type: number
            example: 5
            description: Amount of how many resource have been gained
          resourceType:
            type: string
            enum: [coal, iron, gem, gold, platin]
    fighting:
      description: >
        Result of a fight
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        properties:
          success:
            type: boolean
            description: Is true if the transaction succeeded
          attacker:
            type: string
            format: uuid
          defender:
            type: string
            format: uuid
          damageDealt:          
            type: integer
          defenderAlive:
            type: boolean
            description: true if the defender is alive after the attack
          energyChangedBy:
            type: integer
            example: -10
            description: energy cost for attacking
          itemRedsitribution:
            description: If the defender has been killed, its resources are distributed to all other robots on the planet
            type: array
            items:
              - type: object
                properties:
                  robot:
                    type: string
                    format: uuid
                    description: receiver of loot from killed robot
                  resourceType:
                    type: string
                    enum: [coal, iron, gem, gold, platin]
                    description: type of distributed resource
                  amount:
                    type: integer
                    description: amount of distributed resource that goes to the associated robot
                
    regeneration:
      description: >
        Energy regeneration of a robot
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        properties:
          success:
            type: boolean
            description: Is true if the transaction succeeded
          energyChangedBy:
            type: integer
            example: 10
            description: energy regenerated
    restoration:
      description: >
        Instant restoration of energy or health if an restoration is bought
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        properties:
          success:
            type: boolean
            description: Is true if the transaction succeeded
          action:
            type: string
            enum: [health, energy]
            description: Attribute (health or energy) that is being restored
    item-fighting:
      description: >
        Usage of fighting item
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        properties:
          success:
            type: boolean
            description: Is true if the transaction succeeded
          itemCountChangedBy:
            type: integer
            example: -1
            description: Reduce itemCountByOne after usage
          associatedFight:
            type: string
            format: uuid
            description: this is an eventId, associated to a fighting event
    item-repair:
      description: >
        Repair Swarm is used
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        properties:
          success:
            type: boolean
            description: Is true if the transaction succeeded
          healthChangedBy:
            type: integer
            example: 20
            description: Regained HP of each robots
          robots:
            description: Robots that are affected be the regained HP
            type: array
            items:
              type: string
              format: uuid
    item-movement:
      description: >
        Usage of an item that affects position of a robot
      traits:
        - $ref: '#/components/messageTraits/DefaultTradingKafkaMessage'
      payload:
        type: object
        properties:
          success:
            type: boolean
            description: Is true if the transaction succeeded
          newPlanet:
            type: string
            format: uuid