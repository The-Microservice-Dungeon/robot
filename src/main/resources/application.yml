spring:
  application:
    name: robot
  kafka:
    group-id: robot
    enabled: true
    bootstrap-servers: ${KAFKA_BOOTSTRAP_ADDRESS}
    bootstrap-port: ${KAFKA_BOOTSTRAP_PORT}
    topic:
      consumer:
        round: roundStatus
    consumer:
      auto-offset-reset: earliest
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost:3307}/${DB_NAME:robot}?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
    driver-class-name: org.mariadb.jdbc.Driver
    username: ${DB_USER:robot}
    password: ${DB_PASSWORD:robot}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.MariaDB106Dialect

microservice:
  map:
    address: ${MAP_SERVICE}
topics:
  robot-movement: movement
  robot-neighbours: neighbours
  robot-blocked: planet-blocked
  robot-mining: mining
  robot-fighting: fighting
  robot-regeneration: regeneration
  robot-item-fighting: item-fighting
  robot-item-repair: item-repair
  robot-item-movement: item-movement
  robot-resource-distribution: resource-distribution
  robot-destroyed: robot-destroyed


---
spring:
  config:
    activate:
      on-profile: test
  application:
    name: robot
  kafka:
    group-id: robot
    enabled: true
    bootstrap-servers: localhost:29092
    topic:
      consumer:
        round: gameServiceRound
    consumer:
      auto-offset-reset: earliest
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost:3307}/${DB_NAME:robot}?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
    driver-class-name: org.mariadb.jdbc.Driver
    username: ${DB_USER:root}
    password: ${DB_PASSWORD:root}
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      dialect: org.hibernate.dialect.MariaDB106Dialect
microservice:
  map:
    address: http://localhost:8081
