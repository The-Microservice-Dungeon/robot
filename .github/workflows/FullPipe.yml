name: Unit Test + Docker Image

# Controls when the workflow will run
on:
  push:
    paths-ignore:
      - 'swagger/**'
      - '**/README.md'
      - '**/.gitignore'
    branches:
      - 'main'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow isn't split up, because the gradle daemon takes FOREVER to start
  all-in-one:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 11 + cache
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          # Setup gradle cache
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Unit Test
        run: ./gradlew test --build-cache --parallel

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image to github registry
        run: ./gradlew jib --image=ghcr.io/the-microservice-dungeon/robot/robotservice --parallel --build-cache

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f $GRADLE_USER_HOME/caches/modules-2/modules-2.lock
          rm -f $GRADLE_USER_HOME/caches/modules-2/gc.properties
